/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   pipex.h                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: tkitago <tkitago@student.42tokyo.jp>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/01/10 18:29:48 by tkitago           #+#    #+#             */
/*   Updated: 2025/01/17 19:49:38 by tkitago          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef PIPEX_H
# define PIPEX_H

# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# include <sys/stat.h>
# include <sys/wait.h>
# include <sys/wait.h>
# include <unistd.h>

typedef struct s_pipex
{
	char	**cmds;
	// char 型の配列へのポインタ,実行するコマンドとその引数を格納する配列。各要素は1つのコマンドとその引数を表す文字列配列（{"ls",
	//"-l", NULL} のような形式）

	size_t len; // cmds 配列内のコマンドの数,パイプライン内で実行するコマンドの総数を管理し、ループ処理などで活用

	char	*in;
	//パイプラインの最初のコマンドに対する入力元を指定するファイル名やファイルパスを格納。通常、入力リダイレクション（例：< input.txt）に使用,パイプラインの入力元として使用するファイルを開き、最初のコマンドの標準入力として設定

	char	*out;
	//通常、出力リダイレクション（例：> output.txt または >> output.txt）に使用,パイプラインの出力先として使用するファイルを開き、最後のコマンドの標準出力として設定

	int		here_doc;
	// heredocを使用するかどうかを示すフラグ。ヒアドキュメントは、コマンドに対して複数行の入力を直接提供するための方法,使用する場合、入力の取得方法や処理を変更するための条件分岐に利用

	int		append;
	//出力ファイルへの追記を行うかどうかを示すフラグ。出力リダイレクション時に既存のファイルに追記するか、上書きするかを制御,出力ファイルへの書き込みモードを設定する際に使用。例えば、ユーザーがコマンドラインで >> を指定した場合にこのフラグを 1 に設定

}			t_pipex;

int			pipex(t_pipex *var, char *envp[]);

#endif